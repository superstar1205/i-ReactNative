// Ignite plugin for <%= props.name %>
// ----------------------------------------------------------------------------

const NPM_MODULE_NAME = 'react-native-MODULENAME'
const EXAMPLE_FILE = '<%= props.name %>Example.js'
const PLUGIN_PATH = __dirname
const APP_PATH = process.cwd()

const add = async function (context) {
  const { ignite, filesystem } = context

  // install a npm module and link it
  await ignite.addModule(NPM_MODULE_NAME, { link: true })

  // copy the component example file (if examples are turned on)
  await ignite.addComponentExample(EXAMPLE_FILE, { title: '<%= props.name %> Example' })

  // Example of copying templates/<%= props.name %> to App/<%= props.name %>
  // if (!filesystem.exists(`${APP_PATH}/App/<%= props.name %>`)) {
  //   filesystem.copy(`${PLUGIN_PATH}/templates/<%= props.name %>`, `${APP_PATH}/App/<%= props.name %>`)
  // }

  // Example of patching a file
  // ignite.patchInFile(`${APP_PATH}/App/Config/AppConfig.js`, {
  //   insert: `import '../<%= props.name %>/<%= props.name %>'\n`,
  //   before: `export default {`
  // })
}

/**
 * Remove yourself from the project.
 */
const remove = async function (context) {
  const { ignite, filesystem, patching } = context

  // remove the npm module and unlink it
  await ignite.removeModule(NPM_MODULE_NAME, { unlink: true })

  // remove the component example
  await ignite.removeComponentExample(EXAMPLE_FILE)

  // Example of removing App/<%= props.name %> folder
  // const remove<%= props.name %> = await context.prompt.confirm(
  //   'Do you want to remove App/<%= props.name %>?'
  // )
  // if (remove<%= props.name %>) { filesystem.remove(`${APP_PATH}/App/<%= props.name %>`) }

  // Example of unpatching a file
  // patching.replaceInFile(`${APP_PATH}/App/Config/AppConfig.js`, `import '../<%= props.name %>/<%= props.name %>'\n`, '')
}

// Required in all Ignite plugins
module.exports = { add, remove }

