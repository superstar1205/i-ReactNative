// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`demo remove should remove all comments in AppNavigator 1`] = `
"
/**
 * The app navigator (formerly \\"AppNavigator\\" and \\"MainNavigator\\") is used for the primary
 * navigation flows of your app.
 * Generally speaking, it will contain an auth flow (registration, login, forgot password)
 * and a \\"main\\" flow which the user will use once logged in.
 */
 import {
  DarkTheme,
  DefaultTheme,
  NavigationContainer,
} from \\"@react-navigation/native\\"
import { createNativeStackNavigator } from \\"@react-navigation/native-stack\\"
import { StackScreenProps } from \\"@react-navigation/stack\\"
import { observer } from \\"mobx-react-lite\\"
import React from \\"react\\"
import { useColorScheme } from \\"react-native\\"
import Config from \\"../config\\"
import { 
  WelcomeScreen 
} from \\"../screens\\"
import { navigationRef, useBackButtonHandler } from \\"./navigation-utilities\\"

/**
 * This type allows TypeScript to know what routes are defined in this navigator
 * as well as what properties (if any) they might take when navigating to them.
 *
 * If no params are allowed, pass through \`undefined\`. Generally speaking, we
 * recommend using your MobX-State-Tree store(s) to keep application state
 * rather than passing state through navigation params.
 *
 * For more information, see this documentation:
 *   https://reactnavigation.org/docs/params/
 *   https://reactnavigation.org/docs/typescript#type-checking-the-navigator
 *   https://reactnavigation.org/docs/typescript/#organizing-types
 */
export type AppStackParamList = {
  Welcome: undefined
  // ðŸ”¥ Your screens go here
}

/**
 * This is a list of all the route names that will exit the app if the back button
 * is pressed while in that screen. Only affects Android.
 */
const exitRoutes = Config.exitRoutes

export type AppStackScreenProps<T extends keyof AppStackParamList> = StackScreenProps<
  AppStackParamList,
  T
>

// Documentation: https://reactnavigation.org/docs/stack-navigator/
const Stack = createNativeStackNavigator<AppStackParamList>()

const AppStack = observer(function AppStack() {
  return (
    <Stack.Navigator
      screenOptions={{ headerShown: false }}
    >
          <Stack.Screen name=\\"Welcome\\" component={WelcomeScreen} />
      {/** ðŸ”¥ Your screens go here */}
    </Stack.Navigator>
  )
})

interface NavigationProps extends Partial<React.ComponentProps<typeof NavigationContainer>> {}

export const AppNavigator = observer(function AppNavigator(props: NavigationProps) {
  const colorScheme = useColorScheme()

  useBackButtonHandler((routeName) => exitRoutes.includes(routeName))

  return (
    <NavigationContainer
      ref={navigationRef}
      theme={colorScheme === \\"dark\\" ? DarkTheme : DefaultTheme}
      {...props}
    >
      <AppStack />
    </NavigationContainer>
  )
})
"
`;

exports[`demo remove should remove all comments in WelcomeScreen 1`] = `
"
import { observer } from \\"mobx-react-lite\\"
import React, { useLayoutEffect } from \\"react\\"
import { Image, ImageStyle, TextStyle, View, ViewStyle } from \\"react-native\\"
import { SafeAreaView } from \\"react-native-safe-area-context\\"
import { Button, Header, Text } from \\"../components\\"
import { isRTL } from \\"../i18n\\"
import { colors, spacing } from \\"../theme\\"

const welcomeLogo = require(\\"../../assets/images/logo.png\\")
const welcomeFace = require(\\"../../assets/images/welcome-face.png\\")


export const WelcomeScreen = observer(function WelcomeScreen(
  ) {

  return (
    <View style={$container}>
      <View style={$topContainer}>
        <Image style={$welcomeLogo} source={welcomeLogo} resizeMode=\\"contain\\" />
        <Text style={$welcomeHeading} tx=\\"welcomeScreen.readyForLaunch\\" preset=\\"heading\\" />
        <Text tx=\\"welcomeScreen.exciting\\" preset=\\"subheading\\" />
        <Image style={$welcomeFace} source={welcomeFace} resizeMode=\\"contain\\" />
      </View>

      <SafeAreaView style={$bottomContainer} edges={[\\"bottom\\"]}>
        <View style={$bottomContentContainer}>
          <Text tx=\\"welcomeScreen.postscript\\" size=\\"md\\" />
        </View>
      </SafeAreaView>
    </View>
  )
})

const $container: ViewStyle = {
  flex: 1,
  backgroundColor: colors.background,
}

const $topContainer: ViewStyle = {
  flexShrink: 1,
  flexGrow: 1,
  flexBasis: \\"57%\\",
  justifyContent: \\"center\\",
  paddingHorizontal: spacing.large,
}

const $bottomContainer: ViewStyle = {
  flexShrink: 1,
  flexGrow: 0,
  flexBasis: \\"43%\\",
  backgroundColor: colors.palette.neutral100,
  borderTopLeftRadius: 16,
  borderTopRightRadius: 16,
}

const $bottomContentContainer: ViewStyle = {
  flex: 1,
  paddingHorizontal: spacing.large,
  justifyContent: \\"space-around\\",
}

const $welcomeLogo: ImageStyle = {
  height: 88,
  width: \\"100%\\",
  marginBottom: spacing.huge,
}

const $welcomeFace: ImageStyle = {
  height: 169,
  width: 269,
  position: \\"absolute\\",
  bottom: -47,
  right: -80,
  transform: [{ scaleX: isRTL ? -1 : 1 }],
}

const $welcomeHeading: TextStyle = {
  marginBottom: spacing.medium,
}
"
`;

exports[`demo removeBlock should remove comments and lines between "/* @demo remove-block-start */" and "/* @demo remove-block-end */" 1`] = `
"
        export * from \\"./WelcomeScreen\\"
        export * from \\"./LoginScreen\\"
        export * from \\"./ErrorScreen/ErrorBoundary\\"
        // export other screens here
      "
`;

exports[`demo removeBlock should remove comments and lines between "// @demo remove-block-start" and "// @demo remove-block-end" 1`] = `
"
        export * from \\"./WelcomeScreen\\"
        export * from \\"./LoginScreen\\"
        export * from \\"./ErrorScreen/ErrorBoundary\\"
        // export other screens here
      "
`;

exports[`demo removeCurrentLine should remove line with "/* @demo remove-current-line */" comment 1`] = `
"
        import React from \\"react\\"
        import { StyleProp, View, ViewStyle } from \\"react-native\\"
        
        interface DemoDividerProps {
            type?: \\"vertical\\" | \\"horizontal\\"
            size?: number
            style?: StyleProp<ViewStyle>
        }
        
        export function DemoDivider(props: DemoDividerProps) {
            const { type = \\"horizontal\\", size = 10, style: $styleOverride } = props
        
            return (
              <View
                  style={[
                    $divider,
                    type === \\"horizontal\\" && { height: size },
                    type === \\"vertical\\" && { width: size },
                  ]}
              />
            )
        }
        
        const $divider: ViewStyle = {
            flexGrow: 0,
            flexShrink: 0,
        }
      "
`;

exports[`demo removeCurrentLine should remove line with "// @demo remove-current-line" comment 1`] = `
"
        import React from \\"react\\"
        import { StyleProp, View, ViewStyle } from \\"react-native\\"
        
        interface DemoDividerProps {
            type?: \\"vertical\\" | \\"horizontal\\"
            size?: number
            style?: StyleProp<ViewStyle>
        }
        
        export function DemoDivider(props: DemoDividerProps) {
            const { type = \\"horizontal\\", size = 10, style: $styleOverride } = props
        
            return (
              <View
                  style={[
                    $divider,
                    type === \\"horizontal\\" && { height: size },
                    type === \\"vertical\\" && { width: size },
                    $styleOverride,
                  ]}
              />
            )
        }
        
        const $divider: ViewStyle = {
            flexGrow: 0,
        }
      "
`;

exports[`demo removeNextLine should remove comment and next line after "/* @demo remove-next-line */" 1`] = `
"
        export * from \\"./WelcomeScreen\\"
        export * from \\"./LoginScreen\\"
      "
`;

exports[`demo removeNextLine should remove comment and next line after "// @demo remove-next-line" 1`] = `
"
        export * from \\"./WelcomeScreen\\"
        export * from \\"./LoginScreen\\"
      "
`;
